#!/usr/bin/env node

/**
 * Module dependencies.
 */

var program = require('commander')
  , path = require('path')
  , inspect = require('eyes').inspector()
  , colors = require('colors')
  , Codex = require('../lib/codex');
  

var cwd = process.cwd();

program
  .version(Codex.version)
  .option('-o, --out [dir]', 'Specify an out directory, defaults to `__inPath__/out`');


program
  .command('build [inpath]')
  .description('Build a codex site')
  .action(function (directory) {
    var inDir = directory || cwd
      , outDir = program.out || path.join(cwd, 'out');
    
    if (outDir.substr(0, 1) != '/')
      outDir = path.resolve(cwd, outDir);
    
    var codex = new Codex(inDir, outDir);
    
    codex.on('status', function (status) {
      message = status.message.green + ( (status.target) ? ': '.green + status.target.blue : '' );
      console.log('✓   '.green.bold + message);
      if (status.array) {
        status.array.forEach(function (line) {
          console.log('    ' + line.blue);
        });
      }
    });
    
    codex.on('error', function (error) {
      console.log('✗   '.red.bold + error.message.red);
      inspect(error.data);
      process.exit();
    });
    
    codex.build();
  });

program.parse(process.argv);